name: deploy

on:
  push:
    branches: [ "stage", "main" ]
    paths-ignore: [ "docs/**" ]


jobs:
  inform-about-apply:
    name: inform about apply
    runs-on: ubuntu-latest
    steps:
      - name: inform on PR that apply is running
        uses: mshick/add-pr-comment@v1
        with:
          repo-token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          repo-token-user-login: 'github-actions[bot]'
          message: |
            ***Running terraform apply***
            Results will display here momentarily...

  extract-branch:
    runs-on: ubuntu-latest
    outputs:
      branch: {% raw %}${{ steps.extract_branch.outputs.branch }}{% endraw %}
    steps:

      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

  plan-and-apply-stage:
    needs: extract-branch
    environment: stage
    runs-on: ubuntu-latest
    if: {% raw %}${{ needs.extract-branch.outputs.branch == 'stage' }}{% endraw %}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: plan and apply stage
        uses: ./.github/actions/plan-and-apply
        with:
          tf-api-token: {% raw %}${{ secrets.TF_API_TOKEN }}{% endraw %}
          ssh-key: {% raw %}${{ secrets.TF_API_TOKEN }}{% endraw %}
          droplet-host: {% raw %}${{ secrets.DROPLET_HOST }}{% endraw %}
          env: stage
          github-token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          droplet-user: {% raw %}${{ secrets.DROPLET_USER }}{% endraw %}
          compose-config-args: "-f production.yml -f staging.yml"

  plan-and-apply-prod:
    needs: extract-branch
    environment: prod
    runs-on: ubuntu-latest
    if: {% raw %}${{ needs.extract-branch.outputs.branch == 'main' }}{% endraw %}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0      
      - name: plan and apply stage
        uses: ./.github/actions/plan-and-apply
        with:
          tf-api-token: {% raw %}${{ secrets.TF_API_TOKEN }}{% endraw %}
          ssh-key: {% raw %}${{ secrets.TF_API_TOKEN }}{% endraw %}
          droplet-host: {% raw %}${{ secrets.DROPLET_HOST }}{% endraw %}
          env: stage
          github-token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          droplet-user: {% raw %}${{ secrets.DROPLET_USER }}{% endraw %}
          compose-config-args: "-f production.yml"
